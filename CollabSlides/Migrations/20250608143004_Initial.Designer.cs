// <auto-generated />
using System;
using CollabSlides.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CollabSlides.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250608143004_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CollabSlides.Models.Presentation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Presentations");
                });

            modelBuilder.Entity("CollabSlides.Models.Slide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<Guid?>("PresentationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PresentationId");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("CollabSlides.Models.TextBlock", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FontSize")
                        .HasColumnType("integer");

                    b.Property<string>("FontStyle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FontWeight")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<Guid?>("SlideId")
                        .HasColumnType("uuid");

                    b.Property<string>("TextAlign")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Width")
                        .HasColumnType("integer");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SlideId");

                    b.ToTable("TextBlocks");
                });

            modelBuilder.Entity("CollabSlides.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("PresentationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PresentationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CollabSlides.Models.Slide", b =>
                {
                    b.HasOne("CollabSlides.Models.Presentation", null)
                        .WithMany("Slides")
                        .HasForeignKey("PresentationId");
                });

            modelBuilder.Entity("CollabSlides.Models.TextBlock", b =>
                {
                    b.HasOne("CollabSlides.Models.Slide", null)
                        .WithMany("Content")
                        .HasForeignKey("SlideId");
                });

            modelBuilder.Entity("CollabSlides.Models.User", b =>
                {
                    b.HasOne("CollabSlides.Models.Presentation", null)
                        .WithMany("Users")
                        .HasForeignKey("PresentationId");
                });

            modelBuilder.Entity("CollabSlides.Models.Presentation", b =>
                {
                    b.Navigation("Slides");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CollabSlides.Models.Slide", b =>
                {
                    b.Navigation("Content");
                });
#pragma warning restore 612, 618
        }
    }
}
