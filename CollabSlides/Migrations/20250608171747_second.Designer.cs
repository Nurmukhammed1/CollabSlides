// <auto-generated />
using System;
using CollabSlides.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CollabSlides.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250608171747_second")]
    partial class second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CollabSlides.Models.Presentation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Presentations");
                });

            modelBuilder.Entity("CollabSlides.Models.PresentationUser", b =>
                {
                    b.Property<Guid>("PresentationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PresentationId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PresentationUsers");
                });

            modelBuilder.Entity("CollabSlides.Models.Slide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<Guid>("PresentationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PresentationId");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("CollabSlides.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CollabSlides.Models.Presentation", b =>
                {
                    b.HasOne("CollabSlides.Models.User", "Creator")
                        .WithMany("CreatedPresentations")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("CollabSlides.Models.PresentationUser", b =>
                {
                    b.HasOne("CollabSlides.Models.Presentation", "Presentation")
                        .WithMany("PresentationUsers")
                        .HasForeignKey("PresentationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollabSlides.Models.User", "User")
                        .WithMany("PresentationUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presentation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CollabSlides.Models.Slide", b =>
                {
                    b.HasOne("CollabSlides.Models.Presentation", "Presentation")
                        .WithMany("Slides")
                        .HasForeignKey("PresentationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presentation");
                });

            modelBuilder.Entity("CollabSlides.Models.Presentation", b =>
                {
                    b.Navigation("PresentationUsers");

                    b.Navigation("Slides");
                });

            modelBuilder.Entity("CollabSlides.Models.User", b =>
                {
                    b.Navigation("CreatedPresentations");

                    b.Navigation("PresentationUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
